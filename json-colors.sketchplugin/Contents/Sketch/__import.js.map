{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/import.js","webpack://exports/external \"sketch\""],"names":["Swatch","sketch","doc","getSelectedDocument","importJson","jsonFile","Object","keys","forEach","color","density","swatch","from","name","swatches","push","UI","message","openPanel","NSOpenPanel","setTitle","setCanCreateDirectories","setCanChooseFiles","fileTypes","openPanelButtonPressed","runModalForDirectory_file_types_","nil","NSFileHandlingPanelOKButton","filePath","URL","path","selectedJson","JSON","parse","NSString","stringWithContentsOfFile","log"],"mappings":";;;;;;;;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;CAEA;;AAEe,2EAAY;AACzB,MAAMA,MAAM,GAAGC,6CAAM,CAACD,MAAtB;AACA,MAAME,GAAG,GAAGD,6CAAM,CAACE,mBAAP,EAAZ;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,EAAc;AAC/BC,UAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,OAAtB,CAA8B,UAACC,KAAD,EAAW;AACvCH,YAAM,CAACC,IAAP,CAAYF,QAAQ,CAACI,KAAD,CAApB,EAA6BD,OAA7B,CAAqC,UAACE,OAAD,EAAa;AAChD,YAAMC,MAAM,GAAGX,MAAM,CAACY,IAAP,CAAY;AACzBC,cAAI,YAAKJ,KAAL,iBAAiBC,OAAjB,CADqB;AAEzBD,eAAK,EAAEJ,QAAQ,CAACI,KAAD,CAAR,CAAgBC,OAAhB;AAFkB,SAAZ,CAAf;AAIAR,WAAG,CAACY,QAAJ,CAAaC,IAAb,CAAkBJ,MAAlB;AACD,OAND;AAOD,KARD;AASAV,iDAAM,CAACe,EAAP,CAAUC,OAAV,CAAkB,oBAAlB;AACD,GAXD;;AAaA,MAAMC,SAAS,GAAGC,WAAW,CAACD,SAAZ,EAAlB;AACAA,WAAS,CAACE,QAAV,CAAmB,oBAAnB;AACAF,WAAS,CAACG,uBAAV,GAAoC,KAApC;AACAH,WAAS,CAACI,iBAAV,GAA8B,IAA9B;AAEA,MAAMC,SAAS,GAAG,CAAC,MAAD,CAAlB;AACA,MAAMC,sBAAsB,GAAGN,SAAS,CAACO,gCAAV,CAC7BC,GAD6B,EAE7BA,GAF6B,EAG7BH,SAH6B,CAA/B;;AAMA,MAAIC,sBAAsB,IAAIG,2BAA9B,EAA2D;AACzD,QAAIC,QAAQ,GAAGV,SAAS,CAACW,GAAV,GAAgBC,IAAhB,EAAf;AACA,QAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,QAAQ,CAACC,wBAAT,CAAkCP,QAAlC,CAAX,CAAnB;AAEAQ,OAAG,CAAC,qBAAqBR,QAAtB,CAAH;AAEAxB,cAAU,CAAC2B,YAAD,CAAV;AACD;AACF,C;;;;;;;;;;;ACzCD,mC","file":"__import.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/import.js\");\n","import sketch from \"sketch\";\n\n// documentation: https://developer.sketchapp.com/reference/api/\n\nexport default function () {\n  const Swatch = sketch.Swatch;\n  const doc = sketch.getSelectedDocument();\n\n  const importJson = (jsonFile) => {\n    Object.keys(jsonFile).forEach((color) => {\n      Object.keys(jsonFile[color]).forEach((density) => {\n        const swatch = Swatch.from({\n          name: `${color} /  ${density}`,\n          color: jsonFile[color][density],\n        });\n        doc.swatches.push(swatch);\n      });\n    });\n    sketch.UI.message(\"Import completed âœ…\");\n  };\n\n  const openPanel = NSOpenPanel.openPanel();\n  openPanel.setTitle(\"Choose a JSON File\");\n  openPanel.setCanCreateDirectories = false;\n  openPanel.setCanChooseFiles = true;\n\n  const fileTypes = [\"json\"];\n  const openPanelButtonPressed = openPanel.runModalForDirectory_file_types_(\n    nil,\n    nil,\n    fileTypes\n  );\n\n  if (openPanelButtonPressed == NSFileHandlingPanelOKButton) {\n    var filePath = openPanel.URL().path();\n    var selectedJson = JSON.parse(NSString.stringWithContentsOfFile(filePath));\n\n    log(\"Open File from: \" + filePath);\n\n    importJson(selectedJson);\n  }\n}\n","module.exports = require(\"sketch\");"],"sourceRoot":""}